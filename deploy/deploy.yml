# Ansible playbook for deploying the nomads app

---

# Install system apt packages
- hosts: webservers
  become: yes
  tasks:
  - name: update cache
    apt: name=python-software-properties state=present update_cache=yes cache_valid_time=43200
  - name: install packages
    apt: name={{item}} state=installed
    with_items:
      - python-pip
      - python-dev
      - virtualenv
      - git

  - name: create service user
    user:
      name: "{{ service_user }}"
      shell: /bin/nologin

# Install the app, note: don't do these tasks with become sudo
- hosts: webservers
  become: yes
  become_user: "{{ service_user }}"
  tasks:
  - name: clone repo
    git:
      repo: 'https://github.com/nomadenorg/nomads.git'
      dest: /home/{{ service_user }}/{{ app_name }}
      update: yes  # Does a git pull if the repo already exists
      force: yes
  - name: install modules in a virtualenv
    pip:
      requirements: /home/{{ service_user }}/{{ app_name }}/requirements.txt
      virtualenv: /home/{{ service_user }}/{{ app_name }}/env
      virtualenv_python: python2.7
  - name: copy userlist
    copy:
      src: ../users.txt
      dest: /home/{{ service_user }}/{{ app_name }}/users.txt

- hosts: webservers
  become: yes
  become_user: "{{ service_user }}"
  tasks:
  - name: generate app secret
    command: openssl rand -base64 32
    register: appsecret

  - name: generate cron token
    command: openssl rand -base64 32
    register: crontoken

  - name: configure app
    template:
      src: nomaden.cfg
      dest: /home/{{ service_user }}/{{ app_name }}/nomaden.cfg
  - name: create scheduler cronjob
    cron:
      name: schedule pubs
      minute: 0
      hour: 12
      user: "{{ service_user }}"
      job: "curl -k https://nomaden.ofosos.org/schedulePubs?token={{ crontoken.stdout }}"
  - name: create email cronjob
    cron:
      name: send emails
      minute: 0
      hour: 12
      user: "{{ service_user }}"
      job: "curl -k https://nomaden.ofosos.org/publishMail?token={{ crontoken.stdout }}"

# Configure app systemd service and nginx
- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
  - name: template systemd service config
    template:
      src: nomaden-termine.service
      dest: /etc/systemd/system/{{ app_name }}.service
  - name: start systemd app service
    systemd: name={{ app_name }}.service state=restarted enabled=yes

# Run a quick test to verify the site is working
- hosts: webservers
  tasks:
  - name: get url
    get_url:
      url: http://{{inventory_hostname}}
      dest: /tmp/index.html
  - name: read html
    shell: cat /tmp/index.html
    register: html_contents
  - name: check for string in html
    when: html_contents.stdout.find('Nomaden-Termine') != -1
    debug: msg="The nomads app has been deployed and is running!"
